name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release (must be prefixed with 'v')"
        required: true

env:
  VERSION: ${{ github.event.inputs.version }}

permissions:
  contents: write
  id-token: write

jobs:

  create_release_tag:
    name: Create Tag
    runs-on: ubuntu-latest
    steps:

      - name: Trim asset version prefix and Validate
        run: |-
          echo $VERSION
          trim=${VERSION#"v"}
          echo $trim
          if [[ $trim =~  ^[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
            echo "Version OK: $trim"
          else
            echo "Invalid version: $trim"
            exit 1
          fi
          echo "VERSION=${trim}" >> $GITHUB_ENV
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.ref }}

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Tag Release
        run: |
          git config user.name "Cloud87 GitHub Actions Bot"
          git config user.email 114977785+cloud87bot@users.noreply.github.com
          git tag -a ${{ github.event.inputs.version }} -m ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  goreleaser:
    name: GoReleaser
    runs-on: ubuntu-latest
    needs: [create_release_tag]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.version }}
        
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: .go-version

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_SCOOP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_SCOOP_GITHUB_TOKEN }}